Перем мПутьКПлатформе;
Перем мПутьКИсходномуКаталогу;
Перем мКаталогСборки;

Функция ЗапуститьИПодождать(Параметры)

	СтрокаЗапуска = "";
	Для Каждого Параметр Из Параметры Цикл
	
		СтрокаЗапуска = СтрокаЗапуска + " " + Параметр;
	
	КонецЦикла;

	КодВозврата = 0;
	СтрокаЗапуска = мПутьКПлатформе + СтрокаЗапуска;
	Сообщить(СтрокаЗапуска);
	ЗапуститьПриложение(СтрокаЗапуска, , Истина, КодВозврата);
	
	Возврат КодВозврата;

КонецФункции

Процедура СформироватьОтчетAllure()

	
	ПараметрыЗапуска = Новый Массив;
	ПараметрыЗапуска.Добавить("-q ");
	ПараметрыЗапуска.Добавить("generate");
	ПараметрыЗапуска.Добавить("--output "+мКаталогСборки);
	ПараметрыЗапуска.Добавить(" "+мПутьКИсходномуКаталогу);
	КодВозврата = ЗапуститьИПодождать(ПараметрыЗапуска);
	Сообщить("Код: " +КодВозврата);
КонецПроцедуры

Процедура ПроверитьКаталогСборки()
	КаталогСборки = мКаталогСборки;
	
	Файл = Новый Файл(КаталогСборки);
	Если НЕ Файл.Существует() Тогда
		СоздатьКаталог(КаталогСборки);
	ИначеЕсли Не Файл.ЭтоКаталог() Тогда
		ВызватьИсключение "Каталог сборки не является каталогом";
	КонецЕсли;
	
КонецПроцедуры

мПутьКИсходномуКаталогу = "F:\videoCourseGit1C\repo_learn\allure-report";
мПутьКПлатформе = "allure";
мКаталогСборки = мПутьКИсходномуКаталогу+"\allure-report";

ПроверитьКаталогСборки();
СформироватьОтчетAllure();